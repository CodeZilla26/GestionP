"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/projects/page",{

/***/ "(app-pages-browser)/./lib/firebase-api.ts":
/*!*****************************!*\
  !*** ./lib/firebase-api.ts ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FirebaseAPI: function() { return /* binding */ FirebaseAPI; }\n/* harmony export */ });\n/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! firebase/firestore */ \"(app-pages-browser)/./node_modules/firebase/firestore/dist/esm/index.esm.js\");\n/* harmony import */ var firebase_auth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! firebase/auth */ \"(app-pages-browser)/./node_modules/firebase/auth/dist/esm/index.esm.js\");\n/* harmony import */ var _firebase__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./firebase */ \"(app-pages-browser)/./lib/firebase.ts\");\n// Firebase API wrapper - Reemplaza el servidor Express\n\n\n\n// Firebase API que reemplaza tu servidor Express\nconst FirebaseAPI = {\n    // ==================== AUTENTICACIÃ“N ====================\n    // Crear usuario completo (Auth + Firestore)\n    createUser: async (userData)=>{\n        try {\n            const docRef = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.addDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_2__.db, \"users\"), {\n                ...userData,\n                createdAt: firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.Timestamp.now(),\n                updatedAt: firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.Timestamp.now()\n            });\n            return {\n                id: docRef.id,\n                ...userData\n            };\n        } catch (error) {\n            console.error(\"Error creating user profile:\", error);\n            throw error;\n        }\n    },\n    // Login\n    login: async (email, password)=>{\n        try {\n            const userCredential = await (0,firebase_auth__WEBPACK_IMPORTED_MODULE_1__.signInWithEmailAndPassword)(_firebase__WEBPACK_IMPORTED_MODULE_2__.auth, email, password);\n            return {\n                success: true,\n                user: {\n                    uid: userCredential.user.uid,\n                    email: userCredential.user.email,\n                    name: userCredential.user.displayName || \"Usuario\"\n                }\n            };\n        } catch (error) {\n            return {\n                success: false,\n                error: error.message\n            };\n        }\n    },\n    // Register\n    register: async (email, password, name)=>{\n        try {\n            const userCredential = await (0,firebase_auth__WEBPACK_IMPORTED_MODULE_1__.createUserWithEmailAndPassword)(_firebase__WEBPACK_IMPORTED_MODULE_2__.auth, email, password);\n            // Crear perfil de usuario en Firestore\n            await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.addDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_2__.db, \"users\"), {\n                uid: userCredential.user.uid,\n                name,\n                email,\n                role: \"user\",\n                createdAt: firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.Timestamp.now(),\n                settings: {\n                    profile: {\n                        name,\n                        email,\n                        phone: \"\",\n                        bio: \"\",\n                        location: \"\"\n                    },\n                    notifications: {\n                        email: true,\n                        push: true,\n                        desktop: false\n                    },\n                    appearance: {\n                        theme: \"dark\",\n                        language: \"es\"\n                    }\n                }\n            });\n            return {\n                success: true,\n                user: {\n                    uid: userCredential.user.uid,\n                    email: userCredential.user.email,\n                    name\n                }\n            };\n        } catch (error) {\n            return {\n                success: false,\n                error: error.message\n            };\n        }\n    },\n    // Logout\n    logout: async ()=>{\n        try {\n            await (0,firebase_auth__WEBPACK_IMPORTED_MODULE_1__.signOut)(_firebase__WEBPACK_IMPORTED_MODULE_2__.auth);\n            return {\n                success: true\n            };\n        } catch (error) {\n            return {\n                success: false,\n                error: error.message\n            };\n        }\n    },\n    // ==================== PROYECTOS ====================\n    // Obtener todos los proyectos\n    getProjects: async ()=>{\n        try {\n            const querySnapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_2__.db, \"projects\"));\n            const projects = querySnapshot.docs.map((doc)=>({\n                    id: doc.id,\n                    ...doc.data()\n                }));\n            return projects;\n        } catch (error) {\n            console.error(\"Error getting projects:\", error);\n            throw error;\n        }\n    },\n    // Crear proyecto\n    createProject: async (projectData)=>{\n        try {\n            const docRef = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.addDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_2__.db, \"projects\"), {\n                ...projectData,\n                createdAt: firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.Timestamp.now(),\n                updatedAt: firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.Timestamp.now()\n            });\n            return {\n                id: docRef.id,\n                ...projectData\n            };\n        } catch (error) {\n            console.error(\"Error creating project:\", error);\n            throw error;\n        }\n    },\n    // Actualizar proyecto\n    updateProject: async (id, projectData)=>{\n        try {\n            const projectRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_2__.db, \"projects\", id);\n            await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.updateDoc)(projectRef, {\n                ...projectData,\n                updatedAt: firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.Timestamp.now()\n            });\n            return {\n                id,\n                ...projectData\n            };\n        } catch (error) {\n            console.error(\"Error updating project:\", error);\n            throw error;\n        }\n    },\n    // Eliminar proyecto\n    deleteProject: async (id)=>{\n        try {\n            await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.deleteDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_2__.db, \"projects\", id));\n            return {\n                success: true\n            };\n        } catch (error) {\n            console.error(\"Error deleting project:\", error);\n            throw error;\n        }\n    },\n    // ==================== TAREAS ====================\n    // Obtener todas las tareas\n    getTasks: async ()=>{\n        try {\n            const querySnapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_2__.db, \"tasks\"));\n            const tasks = querySnapshot.docs.map((doc)=>({\n                    id: doc.id,\n                    ...doc.data()\n                }));\n            return tasks;\n        } catch (error) {\n            console.error(\"Error getting tasks:\", error);\n            throw error;\n        }\n    },\n    // Crear tarea\n    createTask: async (taskData)=>{\n        try {\n            const docRef = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.addDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_2__.db, \"tasks\"), {\n                ...taskData,\n                createdAt: firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.Timestamp.now(),\n                updatedAt: firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.Timestamp.now()\n            });\n            return {\n                id: docRef.id,\n                ...taskData\n            };\n        } catch (error) {\n            console.error(\"Error creating task:\", error);\n            throw error;\n        }\n    },\n    // Actualizar tarea\n    updateTask: async (id, taskData)=>{\n        try {\n            const taskRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_2__.db, \"tasks\", id);\n            await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.updateDoc)(taskRef, {\n                ...taskData,\n                updatedAt: firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.Timestamp.now()\n            });\n            return {\n                id,\n                ...taskData\n            };\n        } catch (error) {\n            console.error(\"Error updating task:\", error);\n            throw error;\n        }\n    },\n    // Eliminar tarea\n    deleteTask: async (id)=>{\n        try {\n            await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.deleteDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_2__.db, \"tasks\", id));\n            return {\n                success: true\n            };\n        } catch (error) {\n            console.error(\"Error deleting task:\", error);\n            throw error;\n        }\n    },\n    // ==================== EQUIPO ====================\n    // Obtener equipo\n    getTeam: async ()=>{\n        try {\n            const querySnapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_2__.db, \"team\"));\n            const team = querySnapshot.docs.map((doc)=>({\n                    id: doc.id,\n                    ...doc.data()\n                }));\n            return team;\n        } catch (error) {\n            console.error(\"Error getting team:\", error);\n            throw error;\n        }\n    },\n    // Crear miembro del equipo\n    createTeamMember: async (memberData)=>{\n        try {\n            const docRef = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.addDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_2__.db, \"team\"), {\n                ...memberData,\n                createdAt: firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.Timestamp.now(),\n                updatedAt: firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.Timestamp.now()\n            });\n            return {\n                id: docRef.id,\n                ...memberData\n            };\n        } catch (error) {\n            console.error(\"Error creating team member:\", error);\n            throw error;\n        }\n    },\n    // ==================== NOTIFICACIONES ====================\n    // Obtener notificaciones\n    getNotifications: async ()=>{\n        try {\n            const querySnapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.query)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_2__.db, \"notifications\"), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.orderBy)(\"createdAt\", \"desc\")));\n            const notifications = querySnapshot.docs.map((doc)=>({\n                    id: doc.id,\n                    ...doc.data()\n                }));\n            return notifications;\n        } catch (error) {\n            console.error(\"Error getting notifications:\", error);\n            throw error;\n        }\n    },\n    // Crear notificaciÃ³n\n    createNotification: async (notificationData)=>{\n        try {\n            const docRef = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.addDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_2__.db, \"notifications\"), {\n                ...notificationData,\n                createdAt: firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.Timestamp.now(),\n                read: false\n            });\n            return {\n                id: docRef.id,\n                ...notificationData\n            };\n        } catch (error) {\n            console.error(\"Error creating notification:\", error);\n            throw error;\n        }\n    },\n    // Marcar una notificaciÃ³n como leÃ­da\n    markNotificationRead: async (id)=>{\n        try {\n            const ref = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_2__.db, \"notifications\", id);\n            await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.updateDoc)(ref, {\n                read: true,\n                updatedAt: firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.Timestamp.now()\n            });\n            return {\n                success: true\n            };\n        } catch (error) {\n            console.error(\"Error marking notification as read:\", error);\n            throw error;\n        }\n    },\n    // Marcar todas las notificaciones como leÃ­das (opcionalmente filtradas por userId)\n    markAllNotificationsRead: async (userId)=>{\n        try {\n            const baseCol = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_2__.db, \"notifications\");\n            const q = userId != null ? (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.query)(baseCol, (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)(\"userId\", \"==\", userId)) : baseCol;\n            const snap = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs)(q);\n            const updates = snap.docs.map((d)=>(0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.updateDoc)(d.ref, {\n                    read: true,\n                    updatedAt: firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.Timestamp.now()\n                }));\n            await Promise.all(updates);\n            return {\n                success: true\n            };\n        } catch (error) {\n            console.error(\"Error marking all notifications as read:\", error);\n            throw error;\n        }\n    },\n    // ==================== USUARIOS ====================\n    // Obtener usuario por email\n    getUserByEmail: async (email)=>{\n        try {\n            const q = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.query)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_2__.db, \"users\"), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)(\"email\", \"==\", email));\n            const querySnapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs)(q);\n            if (querySnapshot.empty) {\n                return null;\n            }\n            const userDoc = querySnapshot.docs[0];\n            return {\n                id: userDoc.id,\n                ...userDoc.data()\n            };\n        } catch (error) {\n            console.error(\"Error getting user by email:\", error);\n            throw error;\n        }\n    },\n    // Actualizar configuraciones de usuario\n    updateUserSettings: async (userId, settings)=>{\n        try {\n            const userRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_2__.db, \"users\", userId);\n            await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.updateDoc)(userRef, {\n                settings,\n                updatedAt: firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.Timestamp.now()\n            });\n            return {\n                success: true\n            };\n        } catch (error) {\n            console.error(\"Error updating user settings:\", error);\n            throw error;\n        }\n    },\n    // ==================== DASHBOARD STATS ====================\n    // Obtener estadÃ­sticas del dashboard\n    getDashboardStats: async ()=>{\n        try {\n            const [projectsSnapshot, tasksSnapshot, teamSnapshot] = await Promise.all([\n                (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_2__.db, \"projects\")),\n                (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_2__.db, \"tasks\")),\n                (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_2__.db, \"team\"))\n            ]);\n            const projects = projectsSnapshot.docs.map((doc)=>doc.data());\n            const tasks = tasksSnapshot.docs.map((doc)=>doc.data());\n            const team = teamSnapshot.docs.map((doc)=>doc.data());\n            return {\n                totalProjects: projects.length,\n                activeProjects: projects.filter((p)=>p.status === \"activo\").length,\n                totalTasks: tasks.length,\n                completedTasks: tasks.filter((t)=>t.status === \"completado\").length,\n                pendingTasks: tasks.filter((t)=>t.status === \"pendiente\").length,\n                teamMembers: team.length,\n                activeMembers: team.filter((m)=>m.status === \"activo\").length\n            };\n        } catch (error) {\n            console.error(\"Error getting dashboard stats:\", error);\n            throw error;\n        }\n    }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (FirebaseAPI);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/firebase-api.ts\n"));

/***/ })

});